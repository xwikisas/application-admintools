<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="AdminTools.ChangeDocumentUser" locale="">
  <web>AdminTools</web>
  <name>ChangeDocumentUser</name>
  <language/>
  <defaultLanguage>en</defaultLanguage>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>AdminTools.CheckUserRightsOnPage</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Change Document User</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity output='false'}}
#set ($discard = $xwiki.jsx.use('XWikiProCommons.Pickers.WikiUserPicker'))
#set ($discard = $xwiki.jsx.use('AdminTools.ChangeDocumentUser'))
#macro (getDocumentToUpdateFromWiki $oldUser $wikiId)
  #set ($documentsToUpdateQuery = "SELECT doc.fullName, doc.author, doc.contentAuthor, doc.creator FROM Document doc WHERE ")
  #foreach ($field in $fields)
    #if ($foreach.count &gt; 1)
      #set ($documentsToUpdateQuery = "${documentsToUpdateQuery} OR ")
    #end
    #set ($documentsToUpdateQuery = "${documentsToUpdateQuery} doc.${field}=:oldUser")
  #end
  #set ($documentsToUpdateQuery = "${documentsToUpdateQuery} ORDER BY doc.fullName ASC")
  #set ($documentsToUpdate =
    $services.query.xwql($documentsToUpdateQuery).setWiki($wikiId).bindValue('oldUser', $oldUser).execute())
  #set ($discard = $documentsPerWikiToUpdate.put($wikiId, $documentsToUpdate))
  #set ($docCount = $docCount + $documentsToUpdate.size())
#end
#macro (getMatchedFields $queryResultRow $oldUser)
  #set ($matchedFields = [])
  #if ($queryResultRow[1] == $oldUser &amp;&amp; $fields.contains('author'))
    #set ($discard = $matchedFields.add('author'))
  #end
  #if ($queryResultRow[2] == $oldUser &amp;&amp; $fields.contains('contentAuthor'))
    #set ($discard = $matchedFields.add('contentAuthor'))
  #end
  #if ($queryResultRow[3] == $oldUser &amp;&amp; $fields.contains('creator'))
    #set ($discard = $matchedFields.add('creator'))
  #end
#end
#macro (displaySummary $oldUserRef $newUserReference)
  #set ($oldUserURL =  $xwiki.getDocument($oldUserRef).getURL())
  #set ($oldUserName = $xwiki.getUserName($oldUserRef, false))
  #set ($newUserURL =  $xwiki.getDocument($newUserReference).getURL())
  #set ($newUserName = $xwiki.getUserName($newUserReference, false))
  #set ($oldUserEndTag = "'&gt;$oldUserName&lt;/a&gt;")
  #set ($newUserEndTag = "'&gt;$newUserName&lt;/a&gt;")
  #set ($startTag = "&lt;a target=_blank href='")
  #set ($summary = $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.apply.summary',
    [$fields, $oldUserURL, $newUserURL])).replace('__URLSTART__', $startTag).replace('__URLEND__',
    $oldUserEndTag).replace('__URLEND2__', $newUserEndTag))
  &lt;p&gt;$summary&lt;/p&gt;
#end
{{/velocity}}

{{velocity}}
#set ($oldUser = "$!request.oldUser")
#set ($newUser = "$!request.newUser")
#set ($fields = $request.getParameterValues('field'))
#set ($fields = $fields.subList(0, $fields.size()))
#set ($mainWikiId = $services.wiki.getMainWikiId())
#set ($currentWikiId = $services.wiki.getCurrentWikiId())
#set ($hasSubWikis = ($currentWikiId == $mainWikiId) &amp;&amp; $services.wiki.getAllIds().size() &gt; 1)
{{html}}
#if ($oldUser != '' &amp;&amp; $newUser != '' &amp;&amp; "$!fields" != '')
  #set ($requestWikiId = $request.targetWiki)
  #if ($xwiki.exists($newUser))
    #set ($newUserReference = $services.model.resolveDocument($newUser))
  #else
    #set ($newUserReference = $services.model.resolveDocument("${requestWikiId}:$newUser"))
  #end
  #set ($oldUserRef = $services.model.resolveDocument("${requestWikiId}:$oldUser"))
  #if ($request.confirm == 'true')
    #set ($requestFactory = $services.refactoring.getRequestFactory())
    #set ($request = $requestFactory.createReplaceUserRequest($oldUserRef, $newUserReference))
    #if ($fields.contains('author'))
      #set($discard = $request.setReplaceDocumentAuthor(true))
    #end
    #if ($fields.contains('contentAuthor'))
      #set($discard = $request.setReplaceDocumentContentAuthor(true))
    #end
    #if ($fields.contains('creator'))
      #set($discard = $request.setReplaceDocumentCreator(true))
    #end
    #set ($job = $services.refactoring.replaceUser($request))
    #template('job_macros.vm')
    #displaySummary($oldUserRef $newUserReference)
    #displayJobStatus($job.getStatus())
    &lt;a class='button' href="$doc.getURL()"&gt;$escapetool.xml($services.localization.render(
      'adminTools.security.changeDocumentUser.button.back'))&lt;/a&gt;
  #else
    #set ($documentsPerWikiToUpdate = {})
    #set ($documentsToUpdate = [])
    #set ($docCount = 0)
    #if ($hasSubWikis &amp;&amp; $requestWikiId == '')
      #foreach ($wikiId in $services.wiki.getAllIds())
        #if ($wikiId == $mainWikiId)
          #getDocumentToUpdateFromWiki($oldUser $wikiId)
        #else
          #getDocumentToUpdateFromWiki("${mainWikiId}:$oldUser" $wikiId)
        #end
        #set ($docCount = $docCount + $documentsToUpdate.size())
      #end
    #elseif ($requestWikiId != '')
      #getDocumentToUpdateFromWiki($oldUser $requestWikiId)
    #else
      #getDocumentToUpdateFromWiki($oldUser $currentWikiId)
    #end
    #displaySummary($oldUserRef $newUserReference)
    #foreach ($wikiId in $documentsPerWikiToUpdate.keySet())
      &lt;ul&gt;
      #set ($documentsToUpdate = $documentsPerWikiToUpdate.get($wikiId))
      #set ($prefix = "${wikiId}:")
      #set ($prefixUser = '')
      #if ($hasSubWikis &amp;&amp; $wikiId != $mainWikiId &amp;&amp; $requestWikiId == '')
        #set ($prefixUser = "${mainWikiId}:")
      #end
      #if ($documentsToUpdate.size() &gt; 0)
        &lt;li&gt;$services.wiki.getById($wikiId).getPrettyName()&lt;/li&gt;
      #end
      #foreach ($documentToUpdate in $documentsToUpdate)
        &lt;ul&gt;
        #getMatchedFields($documentToUpdate, "${prefixUser}$oldUser")
        #set ($docRef = "${prefix}$documentToUpdate[0]")
        #set ($targetDoc = $xwiki.getDocument($docRef))
        #set ($entryEndTag = "'&gt;$targetDoc.getDisplayTitle()&lt;/a&gt;")
          &lt;li&gt;
            $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.preview.summary.entry',
              [$targetDoc.getURL(), $docRef, $matchedFields])).replace('__URLSTART__', $startTag).replace('__URLEND__',
              $entryEndTag)
          &lt;/li&gt;
        &lt;/ul&gt;
      #end
      &lt;/ul&gt;
    #end
    &lt;form class='xform'&gt;
      &lt;dl&gt;
        &lt;dt&gt;
          &lt;input type='hidden' name='targetWiki' value="$escapetool.xml($requestWikiId)" /&gt;
          &lt;input type='hidden' name='oldUser' value="$escapetool.xml($oldUser)" /&gt;
          &lt;input type='hidden' name='newUser' value="$escapetool.xml($newUser)" /&gt;
          #foreach ($field in $fields)
            &lt;input type='hidden' name='field' value="$escapetool.xml($field)" /&gt;
          #end
          &lt;input type='hidden' name='confirm' value='true' /&gt;
          #if ($docCount &gt; 0)
            &lt;input class='button' type='submit' value="$escapetool.xml($services.localization.render(
              'adminTools.security.changeDocumentUser.button.confirm'))" /&gt;
          #end
          &lt;a class='button secondary' href="$doc.getURL()"&gt;$escapetool.xml($services.localization.render(
            'adminTools.security.changeDocumentUser.button.cancel'))&lt;/a&gt;
        &lt;/dt&gt;
      &lt;/dl&gt;
    &lt;/form&gt;
  #end
#else
  &lt;p&gt;$escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.description'))&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;contentAuthor&lt;/strong&gt;:
      $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.contentAuthor'))&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;author&lt;/strong&gt;:
      $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.author'))&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;creator&lt;/strong&gt;:
      $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.creator'))&lt;/li&gt;
  &lt;/ul&gt;
  &lt;p&gt;$escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.requirements'))&lt;/p&gt;
  &lt;form class="xform"&gt;
    &lt;div class="form-group"&gt;
      &lt;label for="targetWiki"&gt;
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.wiki.title'))
      &lt;/label&gt;
      &lt;span id="targetWikiHint" class="xHint"&gt;
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.wiki.description'))
      &lt;/span&gt;
      &lt;select name="targetWiki" id="targetWiki" class="xwiki-selectize" aria-describedby="targetWikiHint"&gt;
        &lt;option value=""&gt;
          $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.wiki.placeholder'))
        &lt;/option&gt;
        #set ($selectedWiki = $escapetool.xml($!request.targetWiki))
        #foreach ($db in $services.wiki.getAllIds())
          #set ($isSelected = '')
          #if ($db == $selectedWiki)
            #set ($isSelected = 'selected')
          #end
          &lt;option value="$db" $isSelected&gt;$services.wiki.getById($db).getPrettyName()&lt;/option&gt;
        #end
      &lt;/select&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
      &lt;label for="oldUser"&gt;
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.oldUser.title'))
      &lt;/label&gt;
      &lt;span id="oldUserHint" class="xHint"&gt;
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.oldUser.description'))
      &lt;/span&gt;
      &lt;input class="suggestUsers" type="text" name="oldUser" id="oldUser"
        #if ($oldUser != '')value="$escapetool.xml($oldUser)"#end aria-describedby="oldUserHint" placeholder="
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.oldUser.placeholder'))"/&gt;
    &lt;/div&gt;
    &lt;fieldset&gt;
      &lt;legend&gt;
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.fields.title'))
      &lt;/legend&gt;
      &lt;div&gt;
        &lt;input type="checkbox" id="field-author" name="field" value="author"
          #if (!$request.askConfirmation || $fields.contains('author'))checked="checked"#end /&gt;
        &lt;label for="field-author"&gt;author&lt;/label&gt;
      &lt;/div&gt;
      &lt;div&gt;
        &lt;input type="checkbox" id="field-contentAuthor" name="field" value="contentAuthor"
          #if (!$request.askConfirmation || $fields.contains('contentAuthor'))checked="checked"#end /&gt;
        &lt;label for="field-contentAuthor"&gt;contentAuthor&lt;/label&gt;
      &lt;/div&gt;
      &lt;div&gt;
        &lt;input type="checkbox" id="field-creator" name="field" value="creator"
          #if ($fields.contains('creator'))checked="checked"#end /&gt;
        &lt;label for="field-creator"&gt;creator&lt;/label&gt;
      &lt;/div&gt;
    &lt;/fieldset&gt;
    &lt;br&gt;
    &lt;div class="form-group"&gt;
      &lt;label for="newUser"&gt;
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.newUser.title'))
      &lt;/label&gt;
      &lt;span id="newUserHint" class="xHint"&gt;
        $escapetool.xml($services.localization.render('adminTools.security.changeDocumentUser.newUser.description'))
      &lt;/span&gt;
      &lt;input class="suggestUsers" type="text" name="newUser" id="newUser"
        #if ($newUser != '')value="$escapetool.xml($newUser)"#{else}value="$escapetool.xml(${xcontext.user})"#end
        aria-describedby="newUserHint" placeholder="$escapetool.xml($services.localization.render(
        'adminTools.security.changeDocumentUser.newUser.placeholder'))"/&gt;
    &lt;/div&gt;
    &lt;div class="form-actions"&gt;
      &lt;input type="submit" name="askConfirmation" class="button" value="$escapetool.xml($services.localization.render(
        'adminTools.security.changeDocumentUser.button.preview'))" title="$escapetool.xml($services.localization.render(
        'adminTools.security.changeDocumentUser.button.preview.hint'))" /&gt;
    &lt;/div&gt;
  &lt;/form&gt;
#end
{{/html}}
{{/velocity}}</content>
  <object>
    <name>AdminTools.ChangeDocumentUser</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>e95137df-1e6f-49f0-a9e7-a394f7304b97</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'custom-sharedPickers'], function($, sharedPickers) {
  $(document).ready(function () {
    const selectElement = $('select[name="targetWiki"]');
    if (selectElement.length) {
      const parentElement = selectElement.closest(".xform")[0];
      if (parentElement) {
        selectElement.off('change').on('change', function () {
          sharedPickers.initializeUsers($(this), 'oldUser', 'LOCAL');
          sharedPickers.initializeUsers($(this), 'newUser', 'LOCAL_AND_GLOBAL');
        });
        sharedPickers.initializeUsers(selectElement, 'oldUser', 'LOCAL');
        sharedPickers.initializeUsers(selectElement, 'newUser', 'LOCAL_AND_GLOBAL');
      }
    }
  });
});</code>
    </property>
    <property>
      <name>fieldsSelectize</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
