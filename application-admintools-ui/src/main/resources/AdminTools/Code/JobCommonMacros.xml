<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="AdminTools.Code.JobCommonMacros" locale="">
  <web>AdminTools.Code</web>
  <name>JobCommonMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>JobCommonMacros</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output='false'}}
#macro (getResultLevel $result)
  #set ($resultLevel = 'error')
  #if ($result.getLevel().name() != 'FAIL')
    #set ($resultLevel = $result.getLevel().name().toLowerCase())
  #end
#end
#macro (getCustomJobStatusJSON $status $json)
  #set ($results = [])
  #foreach ($result in $status.getJobResults())
    #getResultLevel($result)
    #set ($discard = $results.add({
      'level': $resultLevel,
      'renderedMessage': "#printResult($result)"
    }))
  #end
  #set ($json = $NULL)
  #setVariable("$json" {
    'id': $status.request.id,
    'state': $status.state,
    'progress': {
      'offset': $status.progress.offset
    },
    'log': {
      'offset': 0,
      'items': $results
    }
  })
#end
#macro (outputJobStatus $jobStatus, $translationPrefix)
  #getCustomJobStatusJSON($jobStatus, $json)
  #set ($json.message = "#customJobFinishedMessage($jobStatus, $!{translationPrefix})")
  $response.setContentType('application/json')
  $jsontool.serialize($json)
#end
#macro (customJobFinishedMessage $status, $translationPrefix)
  #if ($status.error)
    #set($messageKeys = ["job.status.${status.jobType}.error", 'job.status.error'])
    #set($jobReportMessage = $services.localization.render($messageKeys))
    #set($messageClass = 'errormessage job-result-message')
  #elseif ($status.hasLevel('ERROR'))
    #set($jobReportMessage = $services.localization.render($translationPrefix + ".message.error"))
    #set($messageClass = 'errormessage job-result-message')
  #elseif ($status.hasLevel('WARN'))
    #set($jobReportMessage = $services.localization.render($translationPrefix + ".message.warning"))
    #set($messageClass = 'warningmessage job-result-message')
  #else
    #set($jobReportMessage = $services.localization.render($translationPrefix + ".message.success"))
    #set($messageClass = 'successmessage job-result-message')
  #end
  &lt;div class="box $messageClass"&gt;
    $escapetool.xml($jobReportMessage)
  &lt;/div&gt;
#end
#macro (printResult $jobResult)
  &lt;div&gt;
    $escapetool.xml($services.localization.render($jobResult.getMessage(), $jobResult.getParameters()))
  &lt;/div&gt;
  #if ($jobResult.getLevel().name() == 'FAIL')
    ## We add the error stack trace in a div to be able to toggle it in the health check logs.
    &lt;div class='error-logs' style="cursor: pointer;"&gt;
      $status.error.getStackTrace()
    &lt;/div&gt;
  #end
#end
#macro (printJobResults $status)
  #if ($status.state != 'FINISHED')
    #set($loading = true)
  #end
  #set($jobResults = $status.getJobResults())
  &lt;ul class="log"&gt;
  #foreach ($jobResult in $jobResults)
    #getResultLevel($jobResult)
    ## Display the last result item as loading if the associated task is not finished.
    &lt;li class="log-item log-item-${resultLevel}#if ($loading &amp;&amp; !$foreach.hasNext) log-item-loading#end"&gt;
      #printResult($jobResult)
    &lt;/li&gt;
  #end
  &lt;/ul&gt;
#end
#macro (displayJobResults $status $collapsed)
  &lt;dl class="xform"&gt;
    &lt;dt&gt;
      &lt;label class="collapse-toggle#if ($collapsed || $status.state == 'WAITING') collapsed#end"
          data-target-xpath="parent::*/following-sibling::*"&gt;
        &lt;span class="icon-closed"&gt;$services.icon.renderHTML('caret-right')&lt;/span&gt;
        &lt;span class="icon-opened"&gt;$services.icon.renderHTML('caret-down')&lt;/span&gt;
        $escapetool.xml($services.localization.render('adminTools.jobs.result.hint'))
      &lt;/label&gt;
    &lt;/dt&gt;
    &lt;dd&gt;#printJobResults($status)&lt;/dd&gt;
  &lt;/dl&gt;
#end
{{/velocity}}</content>
</xwikidoc>
